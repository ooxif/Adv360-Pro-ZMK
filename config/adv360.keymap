
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
  behaviors {
    #include "macros.dtsi"

    hm: homerow_mods {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS";
        #binding-cells = <2>;
        tapping-term-ms = <200>;
        quick_tap_ms = <175>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
        &kp GRAVE        &kp N1        &kp N2           &kp N3  &kp N4  &kp N5            &kp LS(LA(LC(F11)))                                                               &kp LS(LA(LC(F12)))  &kp N6  &kp N7           &kp N8         &kp N9         &kp N0      &kp BACKSPACE
          &kp TAB         &kp Q         &kp W            &kp E   &kp R   &kp T               &kp LEFT_BRACKET                                                                 &kp RIGHT_BRACKET   &kp Y   &kp U            &kp I          &kp O          &kp P            &kp DEL
         &kp CAPS         &kp A         &kp S            &kp D   &kp F   &kp G                  &kp BACKSLASH   &kp ESC       &sl 2                       &sl 2    &kp ESC            &kp EQUAL   &kp H   &kp J            &kp K          &kp L       &kp SEMI          &kp ENTER
        &kp LSHFT         &kp Z         &kp X            &kp C   &kp V   &kp B                                           &kp LA(F4)                  &kp LA(F4)                                   &kp N   &kp M        &kp COMMA        &kp DOT       &kp FSLH          &kp RSHFT
 &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &kp LS(LC(F11))   &mo 1                              &kp SPACE  &kp APOS       &to 0                       &to 0  &kp MINUS            &kp SPACE           &mo 1  &kp LS(LC(F12))  &kp RIGHT_WIN  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        layer_Layer__1 {
            bindings = <
        &kp GRAVE        &kp F1        &kp F2           &kp F3     &kp F4     &kp F5                 &kp F11                                                                 &kp F12     &kp F6     &kp F7           &kp F8         &kp F9        &kp F10      &kp BACKSPACE
          &kp TAB     &kp LC(Q)       &kp END        &kp PG_UP  &kp PG_DN   &kp HOME            &kp KP_MINUS                                                            &kp KP_MINUS   &kp HOME  &kp PG_DN        &kp PG_UP        &kp END      &kp LC(Q)            &kp DEL
         &kp CAPS     &kp LC(A)      &kp LEFT           &kp UP   &kp DOWN  &kp RIGHT             &kp KP_PLUS  &kp ESC       &sl 2                       &sl 2  &kp ESC   &kp KP_PLUS   &kp LEFT   &kp DOWN           &kp UP      &kp RIGHT      &kp LC(A)          &kp ENTER
   &kp LEFT_SHIFT     &kp LC(Z)     &kp LC(X)        &kp LC(C)  &kp LC(V)  &kp K_APP                                   &kp LA(F4)                  &kp LA(F4)                         &kp K_APP  &kp LC(V)        &kp LC(C)      &kp LC(X)      &kp LC(Z)    &kp RIGHT_SHIFT
 &kp LEFT_CONTROL  &kp LEFT_ALT  &kp LEFT_WIN  &kp LS(LC(F11))     &trans                          &kp SPACE  &kp TAB   &kp LC(W)                   &kp LC(W)  &kp TAB     &kp SPACE                &trans  &kp LS(LC(F12))  &kp RIGHT_WIN  &kp RIGHT_ALT  &kp RIGHT_CONTROL
            >;
        };

        layer_Layer__2 {
            bindings = <
  &none  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &none  &trans  &trans  &trans  &trans  &trans            &trans                                                  &trans  &trans  &trans  &trans  &trans  &trans  &trans
  &none  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans  &trans                            &trans                  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

    };
};
